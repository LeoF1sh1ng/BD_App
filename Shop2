import sqlite3

con = sqlite3.connect('database.db')
cur = con.cursor()
cur.execute('CREATE TABLE IF NOT EXISTS users (id INTEGER PRIMARY KEY AUTOINCREMENT,'
            'name TEXT,'
            'last_name TEXT,'
            'sur_name TEXT,'
            'login TEXT,'
            'password TEXT,'
            'balance INTEGER,'
            'orders_id TEXT)')
con.commit()
cur.execute('CREATE TABLE IF NOT EXISTS products (id INTEGER PRIMARY KEY AUTOINCREMENT,'
            'name TEXT,'
            'price INTEGER,'
            'count INTEGER)')
con.commit()
cur.execute('CREATE TABLE IF NOT EXISTS orders (id INTEGER PRIMARY KEY AUTOINCREMENT,'
            'products_id INTEGER,'
            'counts INTEGER)')
con.commit()
cur.execute('CREATE Table IF NOT EXISTS avt (boll INTEGER, id INTEGER)')

def add_user(name, last_name, sur_name, login, password):
    cur.execute('INSERT INTO users (name, last_name, sur_name, login, password) VALUES (?,?,?,?,?)',
                (name, last_name, sur_name, login, password))
    con.commit()

def login(login, password):
    lst = cur.execute('SELECT id, login, password FROM users').fetchall()
    for i in lst:
        if i[1] == login and i[2] == password:
            cur.execute('DELETE FROM avt')
            con.commit()
            cur.execute('INSERT INTO avt (bool, id) VALUES (?,?)', (True, i[0]))
            break
    else:
        print('Такой учётной записи не существует, проверьте введёные логин и пароль или зарегестрируйтесь')

def logout():
    cur.execute('DELETE FROM avt')
    con.commit()
    cur.execute('INSERT INTO avt (bool, id) VALUES (?,?)', (False, 0))
    con.commit()

def delete_account():
    avt = cur.execute('SELECT * FROM avt').fetchall()
    if avt[0][0] == True:
        print('Вы уверены, что хотите удалить учётную запись?')
        print('Введите "Да" для да, "Нет" для нет')
        ans = input()
        if ans == 'Да':
            cur.execute('DELETE FROM users WHERE id =?', (avt[0][1],))
            con.commit()
            print('Учётная запись удалена')
        else:
            print('Отменено')
    else:
        print('Вы не вошли в учётную запись, войдите, чтобы удалить')

def list():
    for line in cur.execute('SELECT * FROM products').fetchall():
        print(f'Наименование товара: {line[1]}\n'
              f'Стоимость за 1 шт. {line[2]}\n'
              f'Осталось на складе: {line[3]}')
        print()

def buy(name, count):
    for line in cur.execute('SELECT * FROM products').fetchall():
        if line[1] == name:
            if line[3] >= count:
                cur.execute('UPDATE products SET count = count -? WHERE id =?', (count, line[0]))
                con.commit()
                print(f'Вы купили {count} шт. товара {name}')
            else:
                print(f'Осталось на складе {line[3]} шт. товара {name}')
            break
    else:
        print('Такой товар не существует')

def add_balance(summary, id):
    cur.execute('UPDATE users SET balance = balance +? WHERE id =?', (summary, 0))
    con.commit()
    print(f'Теперь ваш баланс: {cur.execute("SELECT balance FROM users WHERE id =?", (id,)).fetchall()[0][0]}')

def status(id):
    stat = cur.execute('SELECT * FROM users WHERE id =?', (id,))
    print(f'ФИО: {stat[1]} {stat[2]} {stat[3]}\n'
          f'Баланс: {stat[6]}'
          f'Количество совершённых покупок: {len(stat[7].split())}')
